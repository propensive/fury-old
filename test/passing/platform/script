mkdir app
mkdir library
mkdir platform

cd library
git init -q
mkdir -p src/core
echo 'object Constants { val x = "Hello World!" }' > src/core/constants.scala
git add .
git commit -m 'version 1' -q

cd ../platform
git init -q
echo '.fury' > .gitignore
fury layer init
fury schema add -n platform
fury project add -n scala
fury module add -n compiler -t compiler
fury module update -C scala-lang.org:scala-compiler:2.12.8
fury binary add -b org.scala-lang:scala-compiler:2.12.8
fury project add -n library
fury module add -n core -c scala/compiler
fury repo add -n library -u $(realpath ../library)
fury source add -d library:src/core
git add .
git commit -m 'platform' -q
fury build run --output linear
echo $?
IPFSREF=$(fury layer share)

cd ../app
fury layer init
fury repo add -n platform -u $(realpath ../platform)
fury layer import -l $IPFSREF --name platform --import platform
IPFSREF=
fury project add -n hello-world
fury module add -n app -c scala/compiler -t application -M HelloWorld
fury permission require -C java.util.PropertyPermission -T scala.maven.version.number -A read
fury permission require -C java.util.PropertyPermission -T scala.version.number -A read
fury permission require -C java.util.PropertyPermission -T scala.time -A read
fury permission require -C java.util.PropertyPermission -T scala.copyright.string -A read
fury permission require -C java.util.PropertyPermission -T test.property -A read
fury permission require -C java.lang.RuntimePermission -T getenv.TEST1
fury permission require -C java.io.FilePermission -T '.content' -A write
fury dependency add -l library/core
fury source add -d src
mkdir -p src
echo 'object HelloWorld extends App { println("Hello World") }' > src/hw.scala
fury build run --output linear
echo $?
