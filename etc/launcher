#!/bin/bash
#
# This is the Fury launcher script, which will download and run Fury in "standalone" mode. You can
# distribute this file in a Git repository to make it easier for users to run Fury.
#
# Copyright 2018-20 Jon Pretty, Propensive OÃœ.
#

version="%VERSION%"
ipfsHash="%HASH%"
md5Hash="%MD5%"
xdgUsrHome="${XDG_DATA_HOME:-"$HOME/.local/share"}"
xdgSysHome="${XDG_DATA_HOME:-/usr/share}"
xdgHome="$([ "$EUID" = "0" ] && echo "${xdgSysHome}" || echo "${xdgUsrHome}")"
furyDir="${xdgHome}/fury"
furyUsr="${furyDir}/usr"
currentDir="${furyUsr}/current"
currentVersion="$(head -n1 "${currentDir}/.version" 2> /dev/null || echo "")"
downloadDir="${furyDir}/downloads"
downloadFile="${downloadDir}/fury-${version}.tar.gz"
ipfsGateway="https://gateway.pinata.cloud/ipfs"
downloadUrl="${ipfsGateway}/${ipfsHash}"
installDir="${furyUsr}/$([ "${currentVersion}" = "${version}" ] && echo "current" || echo "${version}")"
args="$@"
info="\033[1m\033[42m INFO \033[0m "

installFury() {
  checkJava && download && checkFile && extractTar
}

checkJava() {
  printf "${info}Checking for \033[0;36mjava\033[0m on the path..."
  command -v java > /dev/null || fail java
  command -v javac > /dev/null || fail javac
  printf "done\n"
}

runFury() {
  printf "${info}Launching Fury ${version} in standalone mode...\n"
  FURY_HOME="${installDir}" "${installDir}/bin/fury" standalone ${args}
}

download() {
  command -v curl > /dev/null || fail curl
  mkdir -p "${downloadDir}"
  printf "${info}Downloading Fury ${version}..."
  [ -f "${downloadFile}" ] || curl -Lso "${downloadFile}" "${downloadUrl}" || fail download
  printf "done\n"
}

checkFile() {
  command -v md5sum > /dev/null || command -v md5 > /dev/null || fail md5sum
  printf "${info}Checking MD5 checksum of ${downloadFile}..."
  calcHash=$( (md5sum "${downloadFile}" 2> /dev/null || md5 -r "${downloadFile}" 2> /dev/null) | head -c 32)
  [ "${md5Hash}" = "${calcHash}" ] || (rm -f "${downloadFile}" && fail checksum)
  printf "done\n"
}

extractTar() {
  printf "${info}Extracting Fury ${version} into ${installDir}..."
  command -v tar > /dev/null || fail tar
  mkdir -p "${installDir}" && tar xf "${downloadFile}" -C "${installDir}" || fail extract
  printf "done\n"
}

fail() {
  printf "fail\n\033[1m\033[41m FAIL \033[0m \033[1m"
  case "$1" in
    java)     printf "Could not find \033[0;36mjava\033[0m. Please install a JDK using your system's package manager." ;;
    javac)    printf "A JRE was discovered, but could not find \033[0;36mjavac\033[0m. Please install a JDK using your system's package manager." ;;
    curl)     printf "Could not find \033[0;36mcurl\033[0m, which is required to download Fury." ;;
    download) printf "Could not download Fury version ${version}." ;;
    tar)      printf "Could not find \033[0;36mtar\033[0m to extract Fury." ;;
    extract)  printf "An unexpected error occurred while attempting to extract Fury." ;;
    md5sum)   printf "Could not find \033[0;36mmd5sum\033[0m, which is necessary to check the integrity of the downloaded file." ;;
    checksum) printf "The downloaded file fails the MD5 checksum test." ;;
  esac
  printf "\033[0m\n"
  exit 1
}

([ -d "${installDir}" ] || [ "${currentVersion}" = "${version}" ] || installFury) && runFury
