#!/bin/sh

FURYHOME=$(dirname "$0")/..

PORT="8462"
CLASSPATH="$FURYHOME/lib/*"
MAIN="com.facebook.nailgun.NGServer"
FURY_MAIN="fury.Main"

trap cleanup INT

cleanup() {
  printf "\e[0m"
  printf "\e[?25h"
}

nailgun() {
  "${FURYHOME}"/bin/ng --nailgun-port "$PORT" "$@"
}

coursier(){
  "${FURYHOME}/bin/coursier" "$@"
}

killFury() {
  nailgun ng-stop > /dev/null 2> /dev/null && printf 'Fury daemon has shut down\n'
}

stopFury() {
  nailgun "${FURY_MAIN}" -- "stop" 2> /dev/null && killFury
}

isRunning() {
  nc -z 127.0.0.1 "${PORT}" > /dev/null 2> /dev/null || nailgun "${FURY_MAIN}" -- about > /dev/null 2> /dev/null
}

fury() {
  (isRunning || (startFury > /dev/null 2> /dev/null)) && nailgun "${FURY_MAIN}" -- "$@"
}

startFury() {
  isRunning && printf "Fury daemon is running\n" && exit 0

  SCALA=$(coursier fetch --classpath org.scala-lang:scala-reflect:2.12.8 com.facebook:nailgun-server:1.0.0)
  nohup java -Dfury.home="${FURYHOME}" -cp "$SCALA:$CLASSPATH" "$MAIN" "$PORT" > /dev/null 2> /dev/null &

  printf 'Fury daemon is starting...'
  for I in $(seq 1 25); do
    isRunning && printf "\nFury daemon is running\n" && exit 0

    printf '.'
    sleep 0.15
  done
  printf '\n'
  printf 'Starting Fury is taking longer than expected\n'
}

startFuryStandalone() {
  SCALA=$(coursier fetch --classpath org.scala-lang:scala-reflect:2.12.8 com.facebook:nailgun-server:1.0.0)
  java -Dfury.home="${FURYHOME}" -cp "$SCALA:$CLASSPATH" "$MAIN" "$PORT"
}

case "$1" in
  "start")
    startFury
    ;;
  "standalone")
    startFuryStandalone
    ;;
  "kill")
    killFury
    ;;
  "stop")
    stopFury
    ;;
  "restart")
    stopFury && startFury
    ;;
  "prompt")
    fury "$@" 2> /dev/null || printf " %{\e[0;30m%}[ ]"
    ;;
  "completion")
    fury "$@" 2> /dev/null || printf "1:Command:((start:'start the Fury daemon'))\n"
    ;;
  "--help")
    fury "help"
    ;;
  *)
    fury "$@"
    ;;
esac

