#!/bin/bash

if [ "$(uname -s)" = 'Linux' ]; then
  DEFAULT_FURY_HOME="$(realpath $(dirname "$(readlink -f "$0")")/..)"
else
  DEFAULT_FURY_HOME="$(cd "$(dirname "$0")"/.. && pwd -P)"
fi

ARGS="$@"
DEFAULT_PORT="8462"
PORT="${FURY_PORT:-$DEFAULT_PORT}"
FHOME="${FURY_HOME:-$DEFAULT_FURY_HOME}"
CLASSPATH="$(cat $FHOME/classpath):$FHOME/lib/*"
MAIN="com.facebook.nailgun.NGServer"
FURY_MAIN="fury.FuryServer"
QUIET='0'
UPGRADEDIR="$FHOME/upgrade"

trap cleanup INT

cleanup() {
  fury "$$" interrupt
}

nailgun() {
  if ! sh -c "${FHOME}/bin/ng --nailgun-version > /dev/null 2>&1" || [[ "1" -eq "$USE_NG_PY" ]] ; then 
	"${FHOME}"/bin/ng.py --nailgun-port "$PORT" "$1" -- "${@:2}"
  else
  	if [ -f "${FHOME}/bin/libprocname.so" ]; then
		LD_PRELOAD="${FHOME}/bin/libprocname.so" "${FHOME}"/bin/ng --nailgun-port "$PORT" "$1" "${@:2}"
	else
		"${FHOME}"/bin/ng --nailgun-port "$PORT" "$1" "${@:2}"
	fi
  fi
}

message() {
  if [ "$QUIET" = "0" ]; then
    printf "$1"
  fi
}

coursier() {
  "${FHOME}/bin/coursier" "$@"
}

stopFury() {
  nailgun "${FURY_MAIN}" "$$" "stop" 
  nailgun ng-stop 
  # ! pkill -f "(java -Dfury.home)|(bloop)"
}

alive() {
  bash -c "(exec 6<> /dev/tcp/127.0.0.1/${PORT})" > /dev/null 2> /dev/null
}

startNailgun() {
  if [ -d "${UPGRADEDIR}" ]; then
    source "${UPGRADEDIR}/bin/upgrade" && "${FHOME}/bin/fury" "$ARGS"
    exit $?
  else
    if [ "$1" = "prompt" ]; then
      message 'Starting Fury daemon...'
    fi
    if [ -f "${FHOME}/bin/libprocname.so" ]; then
	LD_PRELOAD="${FHOME}/bin/libprocname.so" java -Dfile.encoding=UTF-8 -Dfury.home="${FHOME}" -cp "$CLASSPATH" "$MAIN" "$PORT" > /dev/null &
    else
	java -Dfile.encoding=UTF-8 -Dfury.home="${FHOME}" -cp "$CLASSPATH" "$MAIN" "$PORT" > /dev/null &
    fi
    until (alive); do
      if [ "$1" = "prompt" ]; then
        message '.'
      fi
      sleep 0.1
    done
    if [ "$1" = "prompt" ]; then
      message 'done\n'
    fi
  fi
}

ngServer() {
  alive || startNailgun
}

fury() {
  ngServer && nailgun "${FURY_MAIN}" "$$" "$@"
}

restartFury() {
  stopFury && ngServer
}

startFuryStandalone() {
  java -Dfury.home="${FHOME}" -cp "$CLASSPATH" "$FURY_MAIN" "$$" "$@"
}

case "$1" in
  "start")
    ngServer
    ;;
  "standalone")
    startFuryStandalone "${@:2}"
    ;;
  "stop")
    stopFury
    ;;
  "upgrade")
    fury "$@"
    killall fury > /dev/null
    ;;
  "restart")
    restartFury
    ;;
  "prompt")
    fury "$@" || printf " %{\e[0;30m%}[ ]"
    ;;
  "completion")
    QUIET=1
    fury "$@" || printf "1:Command:((start:'start the Fury daemon'))\n"
    ;;
  "--help")
    fury "help"
    ;;
  *)
    fury "$@"
    res=$?
    cleanup
    exit $res
    ;;
esac

